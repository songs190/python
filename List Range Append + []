#LIST

height_inches = [66, 60, 55, 48, 72]
# list is in square bracket

ints_and_strings = [1, 2, 3, 'Jason', 'Tom', "Angela"]
# list can have both integers and strings

heights = [['Jenny', 61], ['Alexus', 70], ['Sam', 67], ['Grace', 64], ["Vik", 68]]
# list can have more list inside.



#combining two list by using zip and list
names = ["Jason", "Amber", "Tom", "Holly"]
age = [25, 40, 10, 90]

names_age = zip(names, age)
print(names_age)
# if just print(names_age), it will return weird statement. add list()
print(list(names_age))



#practice more zip.

city = ["Irvine", "Manchester", "San Francisco", "Los Angeles"]
income = ["$50000", "$64000", "$10000", "$60000"]
hours_worked = [40, 44, 50, 41]

city_income = zip(city, income, hours_worked)
print(city_income)
print(list(city_income))





#.append() is adding element to the list. It is for adding a single item to a list.
workout_list = []
workout_list.append("bench press")
print(workout_list)


lunch = ["chicken", "potato"]
healther_lunch = lunch + ["broccoli", "berries"]
print(lunch)
print(healther_lunch)
print(list(lunch))


random_numbers = [4, 5, 6, 4, 3, 2]
random_numbers.append(9)
print(random_numbers)
new_random_numbers = random_numbers + [7, 4, 3]
print(new_random_numbers)


# start at 0, will return upto 13
list1 = range(14)
print(list)
print(list(list1))

# will return anything between 3 and 9. starting at 3 and end at 9
list2 = range(3, 9)
print(list2)
print(list(list2))


# wow! this is amazing. if ever need multiples of number, use this. starts at 1, goes up by 10, ends at 91
list3 = range(1, 100, 10)
print(list(list3))

list4 = range(10, 100, 5)
print(list(list4))


#using len() to count how many items are in the list

print(len(list4))

len_list4 = len(list4)
print(len_list4)
#same thing




city = ["Irvine", "Manchester", "San Francisco", "Los Angeles"]

print(city[3])

index3 = city[3]
print(index3)

print(len(city))



#FINDING HOW MANY ITEMS ARE IN THE LIST USING []
how_many_cities_in_the_list = len(city)
print(how_many_cities_in_the_list)

element3 = city[3]
last_element = city[-1]

print(element3, last_element)
# Irvine is always 0 in that list and Los Angeles is always -1, SF is -2, and Machester is -3 and irvine could be -4
element_minus4 = city[-4]
print(element_minus4)



#SLICING LIST / SUB LIST
city2 = ["Irvine", "Manchester", "San Francisco", "Los Angeles", "New York", "Washington", "Ontario", " London"]
sub_city = city2[2:5]
print(sub_city)
#end is the index of one more than the last index that we want to include. If want 5th, then ends at 6th

sub_city2 = city2[4:8]
print(sub_city2)

print(city2[4:8])

print(city2[:4])
# it is okay to not write 0, so instead of 0:4, :4
print(city2[4:])
# if want everything after 4th one, 4: is okay too

print(city2[-3:])
# This will return last 3 items. if -4 then last 4 items

votes = ['Jake', 'Jake', 'Laurie', 'Laurie', 'Laurie', 'Jake', 'Jake', 'Jake', 'Laurie', 'Cassie',
         'Cassie', 'Jake', 'Jake', 'Cassie', 'Laurie', 'Cassie', 'Jake', 'Jake', 'Cassie', 'Laurie']

counting_Jake = votes.count("Jake")
print(counting_Jake)
counting_Laurie = votes.count("Laurie")
print(counting_Laurie)

sort_cities = city2.sort()
print(sort_cities)
#above prints NONE.

print(city2)
# Above will print in Alphabetical order because we sortd by doing city2.sort().



city3 = ["Auburn", "Irvine", "Manchester", "San Francisco", "Los Angeles", "New York", "Washington", "Ontario", " London"]
sorted_cities = sorted(city3)
print(sorted_cities)
# sort() comes after but.... sorted() comes before....  but they work the same.
print(city3[-1:])




inventory = ['twin bed', 'twin bed', 'headboard', 'queen bed', 'king bed',
             'dresser', 'dresser', 'table', 'table', 'nightstand', 'nightstand', 'king bed',
             'king bed', 'twin bed', 'twin bed', 'sheets', 'sheets', 'pillow', 'pillow']

inventory_len = len(inventory)
first = inventory[0]
last = inventory[-1]
inventory_2_6 = inventory[2:6]
first_3 = inventory[:3]
sort_inventory = inventory.sort()
twin_beds = inventory.count("twin bed")

